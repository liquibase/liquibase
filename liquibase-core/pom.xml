<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase</artifactId>
        <version>0-SNAPSHOT</version>
    </parent>

    <artifactId>liquibase-core</artifactId>
    <packaging>jar</packaging>

    <dependencies>

        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.10.11</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.14.2.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.12.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>3.12.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-antunit</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <scope>provided</scope>
            <version>5.0.0</version>
        </dependency>        

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-rules</artifactId>
            <version>1.19.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>5.5.2</version>
        </dependency>


    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javacc-maven-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>javacc</id>
                        <goals>
                            <goal>javacc</goal>
                        </goals>
                        <configuration>
                            <javaUnicodeEscape>false</javaUnicodeEscape>
                            <unicodeInput>true</unicodeInput>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>5.1.4</version>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>org.liquibase.core</Bundle-SymbolicName>
                        <Bundle-Activator>liquibase.osgi.Activator</Bundle-Activator>
                        <Import-Package>
                            javax.activation*;resolution:=optional,
                            javax.servlet.*;version="[2.6,4)";resolution:=optional,
                            javax.sql.*,
                            org.osgi.*,
                            org.yaml.snakeyaml.*,
                            *;resolution:=optional
                        </Import-Package>
                        <Provide-Capability>
                          osgi.serviceloader; osgi.serviceloader=liquibase.serializer.ChangeLogSerializer,
                          osgi.serviceloader; osgi.serviceloader=liquibase.parser.NamespaceDetails,
                          osgi.serviceloader; osgi.serviceloader=liquibase.database.Database,
                          osgi.serviceloader; osgi.serviceloader=liquibase.change.Change,
                          osgi.serviceloader; osgi.serviceloader=liquibase.database.DatabaseConnection,
                          osgi.serviceloader; osgi.serviceloader=liquibase.precondition.Precondition,
                          osgi.serviceloader; osgi.serviceloader=liquibase.serializer.SnapshotSerializer,
                          osgi.serviceloader; osgi.serviceloader=liquibase.configuration.AutoloadedConfigurations,
                          osgi.serviceloader; osgi.serviceloader=liquibase.diff.DiffGenerator,
                          osgi.serviceloader; osgi.serviceloader=liquibase.lockservice.LockService,
                          osgi.serviceloader; osgi.serviceloader=liquibase.changelog.ChangeLogHistoryService,
                          osgi.serviceloader; osgi.serviceloader=liquibase.datatype.LiquibaseDataType,
                          osgi.serviceloader; osgi.serviceloader=liquibase.configuration.ConfigurationValueProvider,
                          osgi.serviceloader; osgi.serviceloader=liquibase.logging.LogService,
                          osgi.serviceloader; osgi.serviceloader=liquibase.snapshot.SnapshotGenerator,
                          osgi.serviceloader; osgi.serviceloader=liquibase.parser.ChangeLogParser,
                          osgi.serviceloader; osgi.serviceloader=liquibase.servicelocator.ServiceLocator,
                          osgi.serviceloader; osgi.serviceloader=liquibase.diff.compare.DatabaseObjectComparator,
                          osgi.serviceloader; osgi.serviceloader=liquibase.command.LiquibaseCommand,
                          osgi.serviceloader; osgi.serviceloader=liquibase.license.LicenseService,
                          osgi.serviceloader; osgi.serviceloader=liquibase.diff.output.changelog.ChangeGenerator,
                          osgi.serviceloader; osgi.serviceloader=liquibase.executor.Executor,
                          osgi.serviceloader; osgi.serviceloader=liquibase.structure.DatabaseObject,
                          osgi.serviceloader; osgi.serviceloader=liquibase.parser.SnapshotParser,
                          osgi.serviceloader; osgi.serviceloader=liquibase.hub.HubService,
                          osgi.serviceloader; osgi.serviceloader=liquibase.command.CommandStep,
                          osgi.serviceloader; osgi.serviceloader=liquibase.sqlgenerator.SqlGenerator
                        </Provide-Capability>
                        <Require-Capability>
                        osgi.extender; filter:="(osgi.extender=osgi.serviceloader.registrar)",
                        osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)",
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.serializer.ChangeLogSerializer)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.parser.NamespaceDetails)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.database.Database)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.change.Change)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.database.DatabaseConnection)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.precondition.Precondition)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.serializer.SnapshotSerializer)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.configuration.AutoloadedConfigurations)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.diff.DiffGenerator)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.lockservice.LockService)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.changelog.ChangeLogHistoryService)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.datatype.LiquibaseDataType)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.configuration.ConfigurationValueProvider)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.logging.LogService)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.snapshot.SnapshotGenerator)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.parser.ChangeLogParser)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.servicelocator.ServiceLocator)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.diff.compare.DatabaseObjectComparator)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.command.LiquibaseCommand)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.license.LicenseService)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.diff.output.changelog.ChangeGenerator)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.executor.Executor)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.structure.DatabaseObject)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.parser.SnapshotParser)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.hub.HubService)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.command.CommandStep)"; cardinality:=multiple,
                        osgi.serviceloader; filter:="(osgi.serviceloader=liquibase.sqlgenerator.SqlGenerator)"; cardinality:=multiple
                        </Require-Capability>
                    </instructions>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>com.opencsv:*</include>
                                    <include>org.apache.commons:commons-lang3</include>
                                    <include>org.apache.commons:commons-text</include>
                                    <include>org.apache.commons:commons-collections4</include>
                                </includes>
                            </artifactSet>
                            <relocations>
                                <relocation>
                                    <pattern>org.apache.commons.collections4</pattern>
                                    <shadedPattern>liquibase.repackaged.org.apache.commons.collections4</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.commons.lang3</pattern>
                                    <shadedPattern>liquibase.repackaged.org.apache.commons.lang3</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.apache.commons.text</pattern>
                                    <shadedPattern>liquibase.repackaged.org.apache.commons.text</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.opencsv</pattern>
                                    <shadedPattern>liquibase.repackaged.com.opencsv</shadedPattern>
                                </relocation>
                            </relocations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>false</addClasspath>
                        </manifest>
                        <manifestEntries>
                            <Build-Time>${build.timestamp}</Build-Time>
                            <Build-Number>${build.number}</Build-Number>
                            <Liquibase-Version>${project.version}</Liquibase-Version>
                        </manifestEntries>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>

                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- liquibase-core jar is actually the one from liquibase-dist. So don't install just this sub-module -->
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
