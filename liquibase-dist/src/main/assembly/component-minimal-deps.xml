<!-- include all this in the tar file -->
<component>
    <fileSets>
        <fileSet>
            <directory>${project.build.directory}/archive</directory>
            <outputDirectory>${file.separator}</outputDirectory>
            <lineEnding>unix</lineEnding>
            <includes>
                <include>liquibase</include>
            </includes>
            <fileMode>0755</fileMode>
        </fileSet>
        <fileSet>
            <directory>${project.build.directory}/archive</directory>
            <!--
                <outputDirectory>${file.separator}</outputDirectory> is there because maven-assembly-plugin would
                complain on Windows otherwise:
                "OS=Windows and the assembly descriptor contains a *nix-specific root-relative-reference (starting with slash) /"
            -->
            <outputDirectory>${file.separator}</outputDirectory>
            <lineEnding>dos</lineEnding>
            <includes>
                <include>*.bat</include>
            </includes>
        </fileSet>
        <fileSet>
            <directory>${project.build.directory}/archive</directory>
            <outputDirectory>${file.separator}</outputDirectory>
            <lineEnding>unix</lineEnding>
            <excludes>
                <exclude>liquibase</exclude>
                <exclude>*.bat</exclude>
            </excludes>
        </fileSet>
    </fileSets>
    <files>
        <!-- specifying the outputDirectory as file.separator puts it in the root -->
        <file>
            <source>../ABOUT.txt</source>
            <outputDirectory>${file.separator}</outputDirectory>
        </file>
        <file>
            <source>../changelog.txt</source>
            <outputDirectory>${file.separator}</outputDirectory>
        </file>
    </files>
    <dependencySets>
        <dependencySet>
            <outputFileNameMapping>${artifact.artifactId}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>
            <outputDirectory>internal/lib</outputDirectory>
            <useTransitiveFiltering>true</useTransitiveFiltering>
            <scope>runtime</scope>
            <includes>
                <include>org.liquibase:liquibase-core:</include>
                <include>org.liquibase:liquibase-commercial:</include>
                <include>com.opencsv:opencsv:</include>
                <include>org.yaml:snakeyaml:jar:</include>
                <include>info.picocli:picocli:jar:</include>
            </includes>

            <!-- some libraries lie about compile vs. runtime dependencies. Or we don't hit code that uses these. So exclude them manually. -->
            <excludes>
                <exclude>javax.xml.bind:jaxb-api</exclude>
                <exclude>commons-beanutils:commons-beanutils:jar:</exclude> <!-- from opencsv -->
                <exclude>org.liquibase:liquibase-snowflake:jar:</exclude> <!-- from liquibase-core -->
                <exclude>org.liquibase:liquibase-cli:jar:</exclude> <!-- from liquibase-core  -->
                <exclude>org.liquibase:liquibase-standard:jar:</exclude> <!-- from liquibase-standard  -->
            </excludes>
        </dependencySet>
    </dependencySets>
</component>
