name: Build Branch SNAPSHOT

on:
  workflow_dispatch:
  #push:
  #branches:
  #- 'master'
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
      - labeled

  push:
    branches:
      - github-action-**
    paths-ignore:
      - '**.md'

env:
  MAVEN_VERSION: '3.9.2'

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      timeStamp: ${{ steps.get-timestamp.outputs.timestamp }}
      thisBranchName: ${{ steps.get-branch-name.outputs.thisBranchName }}
      latestMergeSha: ${{ steps.get-sha.outputs.latestMergeSha }}
      setupSuccessful: "true"

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.after}}

      - name: Get Latest Merge Commit SHA
        id: get-sha
        run: |
          latest_merge_sha=`(git rev-parse HEAD)`
          echo "latestMergeSha=${latest_merge_sha}" >> $GITHUB_OUTPUT

      - name: Get Timestamp
        id: get-timestamp
        run: |
          timeStamp=$(date +'%Y-%m-%d %H:%M:%S %Z')
          echo "timestamp=${timeStamp}" >> $GITHUB_OUTPUT

      - name: Get Current BranchName
        id: get-branch-name
        run: |
          # this logic checks if the branch is from a forked repository PR or not. Where -n is the inverse of -z (not empty)
          if [ -n "${GITHUB_HEAD_REF}" ];
          then
            branch_name=${GITHUB_HEAD_REF}
          else
            branch_name=${{ github.ref_name }}
          fi 

          modified_branch_name=`(echo $branch_name | tr '/' '_')`
          echo "thisBranchName=$modified_branch_name" >> $GITHUB_OUTPUT          

  build:
    name: Build & Package
    runs-on: ubuntu-22.04
    needs: setup
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.after}}
      - name: Set up Java for publishing to GitHub Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          server-id: liquibase

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      # Version artifact based off of branch and commit SHA.
      - name: Version Artifact
        run: |
          mvn versions:set "-DnewVersion=${{ needs.setup.outputs.thisBranchName }}-SNAPSHOT"
          #mvn versions:set "-DnewVersion=${{ inputs.branchName }}-SNAPSHOT"

      # Publish to GitHub Packages
      - name: Publish package
        run: |
          mvn -B clean deploy -pl '!liquibase-dist' -DskipTests=true "-Dbuild.repository.owner=liquibase" "-Dbuild.repository.name=liquibase" "-Dbuild.branch=${{ needs.setup.outputs.thisBranchName }}" "-Dbuild.number=${{ github.run_number }}" "-Dbuild.commit=${{ needs.setup.outputs.latestMergeSha }}" "-Dbuild.timestamp=${{ needs.setup.outputs.timeStamp }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
