name: Build & Deploy BigQuery extensions

on:
  workflow_call:
    inputs:
      liquibase-version:
        description: 'liquibase version'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      liquibase-version:
        description: 'liquibase version'
        required: true
        type: string

env:
  MAVEN_VERSION: '3.9.2'

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        repo: ['liquibase-bigquery', 'liquibase-commercial-bigquery']
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        name: Checkout ${{ matrix.repo }}
        with:
          repository: liquibase/${{ matrix.repo }}
          ref: main
          token: ${{ secrets.BOT_TOKEN }}
          path: ${{ matrix.repo }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "false"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-bigquery",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-bigquery",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-bigquery-commercial",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-bigquery-commercial",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              },
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              },
              {
                "id": "liquibase-bigquery",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              },
              {
                "id": "liquibase-bigquery-commercial",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT }}"
              }
            ]

      - name: Re-version ${{ matrix.repo }} extension
        run: |
          cd ${{ matrix.repo }}
          mvn versions:set -DnewVersion=${{ inputs.liquibase-version }}
          
      - name: Build and install ${{ matrix.repo }} extension
        run: |
          cd ${{ matrix.repo }}
          mvn clean package -DskipTests
          cd ..

      - name: Deploy ${{ matrix.repo }} extension to GitHub Packages
        continue-on-error: true
        env:
          MAVEN_USERNAME: liquibot
          MAVEN_PASSWORD: ${{ secrets.LIQUIBOT_PAT }}
        run: |
          cd ${{ matrix.repo }}
          OUTPUT=$(mvn deploy:deploy-file -Dfile=./target/${{ matrix.repo }}-${{ inputs.liquibase-version }}.jar -DpomFile=pom.xml -DrepositoryId=${{ matrix.repo }} -Durl=https://maven.pkg.github.com/liquibase/${{ matrix.repo }} -Dtoken=${{ secrets.BOT_TOKEN }} | tee /dev/fd/2)
          echo "$OUTPUT" | grep -q "status code: 409, reason phrase: Conflict (409)" && echo "${{ matrix.repo }} ${{ inputs.liquibase-version }} is already deployed in GitHub Packages"
          cd ..
