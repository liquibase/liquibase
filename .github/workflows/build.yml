# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Test

on: [ pull_request_target ]

jobs:
  test:
    name: Java ${{ matrix.java }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11, 16]
    steps:
    - uses: actions/checkout@v2
    - name: Cache Local Maven Repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java }}
        distribution: 'adopt'
    - name: Login to Artifactory
      uses: docker/login-action@v1
      with:
        registry: docker-dev.artifactory.datical.net
        username: ${{ secrets.RT_USER }}
        password: ${{ secrets.RT_TOKEN }}
    - name: Start Docker Databases
      run: docker-compose -f ./liquibase-integration-tests/docker/docker-compose.yml up -d
    - name: Test With Maven
      run: mvn -B test --file pom.xml
    - name: Stop Docker Databases
      run: docker-compose -f ./liquibase-integration-tests/docker/docker-compose.yml down
    - name: Archive Test Results
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: test-reports-jdk${{ matrix.java }}
        path: ./**/target/surefire-reports
      
  build:
    name: Build Artifacts
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache Local Maven Repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Build With Maven
      run: mvn -B package -DskipTests -Dliquibase.version.qualifier=-${{ github.head_ref }} -Dbuild.number=${{ github.run_number }} -Dbuild.commit=${{ github.sha }} --file pom.xml
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: liquibase
        path: |
          liquibase-dist/target/*.jar
          liquibase-dist/target/*.zip
          liquibase-dist/target/*.tar.gz
