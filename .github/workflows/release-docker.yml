name: Release Docker

run-name: "Release Docker Images - v${{ inputs.version }}${{ inputs.dry_run && ' (Dry Run)' || '' }}"

on:
  workflow_call:
    inputs:
      version:
        description: "Version to release"
        required: true
        type: string
      dry_run:
        description: "Flag to indicate if this is a dry-run"
        required: false
        type: boolean
        default: false
  
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true
        type: string
      dry_run:
        description: "Flag to indicate if this is a dry-run"
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  id-token: write

jobs:
  release-docker:
    name: Release docker images
    runs-on: ubuntu-22.04
    steps:
      - name: Configure AWS credentials for vault access
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.LIQUIBASE_VAULT_OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Get secrets from vault
        id: vault-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            ,/vault/liquibase
          parse-json-secrets: true

      - name: Get GitHub App token
        id: get-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ env.LIQUIBASE_GITHUB_APP_ID }}
          private-key: ${{ env.LIQUIBASE_GITHUB_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          permission-contents: write
          permission-actions: write

      - name: Release liquibase/docker v${{ inputs.version }}
        uses: the-actions-org/workflow-dispatch@v4
        id: docker_dispatch
        with:
          workflow: create-release.yml
          token: ${{ steps.get-token.outputs.token }}
          inputs: '{ "liquibaseVersion": "${{ inputs.version }}", "dryRun": "${{ inputs.dry_run || false }}" }'
          ref: main
          repo: liquibase/docker
          wait-for-completion: true
          workflow-logs: json-output

      - name: Adding Docker run to job summary
        if: success()
        continue-on-error: true
        run: echo '### 🐳 Docker Release Job -> ${{steps.docker_dispatch.outputs.workflow-url}}' >> $GITHUB_STEP_SUMMARY
