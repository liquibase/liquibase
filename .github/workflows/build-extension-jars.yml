name: Build & Deploy extensions

on:
  workflow_call:
    inputs:
      liquibase-version:
        description: 'liquibase version'
        required: true
        type: string
      dependencies:
        description: 'Comma separated list of needed dependencies to release the extension list'
        required: false
        type: string
      extensions:
        description: 'Comma separated list of extensions to release to GPM'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      liquibase-version:
        description: 'liquibase version'
        required: true
        type: string
      dependencies:
        description: 'Comma separated list of needed dependencies to release the extension list'
        required: false
        type: string
      extensions:
        description: 'Comma separated list of extensions to release to GPM'
        required: true
        type: string

env:
  MAVEN_VERSION: '3.9.2'

jobs:
  build-deploy:
    runs-on: ubuntu-22.04
    continue-on-error: true
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Split dependencies
        id: split-dependencies
        if: ${{ inputs.dependencies != '' }}
        run: echo "REPOS=$(echo '${{ inputs.dependencies }}' | tr ',' '\n')" >> $GITHUB_ENV

      - name: Split extensions
        id: split-extensions
        run: echo "EXTENSIONS=$(echo '${{ inputs.extensions }}' | tr ',' '\n')" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v22
        with:
          repositories: |
            [
              {
                "id": "liquibase",
                "url": "https://maven.pkg.github.com/liquibase/liquibase",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              },
              {
                "id": "liquibase-pro",
                "url": "https://maven.pkg.github.com/liquibase/liquibase-pro",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "true",
                  "updatePolicy": "always"
                }
              }
            ]
          servers: |
            [
              {
                "id": "liquibase",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT_GPM_ACCESS }}"
              },
              {
                "id": "liquibase-pro",
                "username": "liquibot",
                "password": "${{ secrets.LIQUIBOT_PAT_GPM_ACCESS }}"
              }
            ]

      - name: Build and install dependencies
        if: ${{ inputs.dependencies != '' }}
        run: |
          for repo in $REPOS; do
            echo "Processing $repo..."
            git clone https://github.com/liquibase/$repo.git $repo
            cd $repo
            mvn versions:set -DnewVersion=${{ inputs.liquibase-version }}
            mvn clean install -DskipTests
            cd ..
          done

      - name: Build and deploy extensions
        run: |
          for repo in $EXTENSIONS; do
            echo "Processing $repo..."
            git clone https://github.com/liquibase/$repo.git $repo
            cd $repo
            mvn versions:set -DnewVersion=${{ inputs.liquibase-version }}
            mvn clean package -DskipTests
            OUTPUT=$(mvn deploy:deploy-file -Dfile=./target/${repo}-${{ inputs.liquibase-version }}.jar -DpomFile=pom.xml -DrepositoryId=liquibase -Durl=https://maven.pkg.github.com/liquibase/$repo | tee /dev/fd/2)
            echo "$OUTPUT" | grep -q "status code: 409, reason phrase: Conflict (409)" && echo "$repo ${{ inputs.liquibase-version }} is already deployed in GitHub Packages"
            cd ..
          done
