name: Build Main/Master SNAPSHOT

on:
  workflow_dispatch:
  schedule:
    - cron: "5 6 * * *"
  push:
    branches:
      - 'main'
      - 'master'
env:
  MAVEN_VERSION: '3.9.2'
jobs:
  setup:
    name: Setup
    needs: check_build_safety
    runs-on: ubuntu-22.04
    outputs:
      thisSha: ${{ steps.find-attributes.outputs.thisSha }}
      thisBranchName: ${{ steps.find-attributes.outputs.thisBranchName }}
      thisRepositoryName: ${{ steps.find-attributes.outputs.thisRepositoryName }}
      thisRepositoryOwner: ${{ steps.find-attributes.outputs.thisRepositoryName }}
      setupSuccessful: "true"

  build-master:
    name: Build & Package Master
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.after}}

      - name: Find mvn Build Attributes
        id: find-attributes
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            const helper = require('./.github/util/workflow-helper.js')({github, context});

            core.setOutput("thisSha", helper.getCurrentSha());
            core.setOutput("thisBranchName", helper.getCurrentBranch());
            core.setOutput("thisRepoName", helper.getRepositoryName());
            core.setOutput("thisRepoOwner", helper.getRepositoryOwner());

      - uses: actions/checkout@v3

      - name: Set up Java for publishing to GitHub Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          server-id: liquibase
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      # Version artifact based off of branch and commit SHA.
      - name: Version Artifact
        run: mvn versions:set -DnewVersion="master-SNAPSHOT"

      # Publish to GitHub Packages
      - name: Publish package
        run: mvn -B clean deploy -DskipTests=true "-Dbuild.repository.owner=${{ needs.setup.outputs.thisRepositoryOwner }}" "-Dbuild.repository.name=${{ needs.setup.outputs.thisRepositoryName }}" "-Dbuild.branch=${{ needs.setup.outputs.thisBranchName }}" "-Dbuild.number=${{ github.run_number }}" "-Dbuild.commit=${{ needs.setup.outputs.thisSha }}" "-Dbuild.timestamp=${{ steps.date.outputs.date }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-sha:
    name: Build & Package SHA
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java for publishing to GitHub Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          server-id: liquibase
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: ${{ env.MAVEN_VERSION }}

      # Version artifact based off of branch and commit SHA.
      - name: Version Artifact
        run: mvn versions:set -DnewVersion="$(git rev-parse --short HEAD)-SNAPSHOT"

      # This would still deploy a package if there are test failures. Might help to have build.yml complete and then run this workflow
      # Publish to GitHub Packages
      - name: Publish package
        run: mvn -B clean deploy -DskipTests=true "-Dbuild.repository.owner=${{ needs.setup.outputs.thisRepositoryOwner }}" "-Dbuild.repository.name=${{ needs.setup.outputs.thisRepositoryName }}" "-Dbuild.branch=${{ needs.setup.outputs.thisBranchName }}" "-Dbuild.number=${{ github.run_number }}" "-Dbuild.commit=${{ needs.setup.outputs.thisSha }}" "-Dbuild.timestamp=${{ steps.date.outputs.date }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
