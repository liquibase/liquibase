name: Dry run release

on:
  workflow_dispatch: # Trigger on demand
  # schedule: # Trigger nightly at midnight UTC
  #   - cron: "0 0 * * *"

env:
  DRY_RUN_VERSION: "77.7.7"

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      dry_run_branch: ${{ steps.create_branch.outputs.dry_run_branch }}
      dry_run_version: ${{ steps.get_version.outputs.dry_run_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create a dry-run branch
        id: create_branch
        run: |
          DRY_RUN_BRANCH="dry-run-$(date +%Y%m%d%H%M%S)"
          git checkout -b $DRY_RUN_BRANCH
          echo "dry_run_branch=$DRY_RUN_BRANCH" >> $GITHUB_OUTPUT
          echo "New branch created: $DRY_RUN_BRANCH"
              
      - name: Set up Git
        run: |
          git config user.name "liquibot"
          git config user.email "liquibot@liquibase.org"

      - name: Push dry-run branch
        run: |
          git push origin ${{ steps.create_branch.outputs.dry_run_branch }}

      - name: Get run-tests.yml runId 
        id: get_run_id
        uses: actions/github-script@v6
        with:
          script: |
            const workflowFileName = 'run-tests.yml';
            const workflowRuns = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: workflowFileName,
              status: 'success',
              per_page: 1, // Fetch only the most recent successful run
            });

            if (workflowRuns.data.workflow_runs.length > 0) {
              const lastRunId = workflowRuns.data.workflow_runs[0].id;
              // Append the output to $GITHUB_OUTPUT
              const fs = require('fs');
              fs.appendFileSync(process.env.GITHUB_OUTPUT, `dry_run_id=${lastRunId}\n`);
            } else {
              core.setFailed(`No successful runs found for workflow ${workflowFileName}`);
            }


  dry-run-release:
    needs: [ setup ]
    uses: liquibase/liquibase/.github/workflows/create-release.yml@master
    with:
      version: ${{ env.DRY_RUN_VERSION }}
      branch: ${{ needs.setup.outputs.dry_run_branch }}
      runId: ${{ needs.setup.outputs.dry_run_id }}
      dry_run: true
    secrets: inherit
  
  cleanup:
    runs-on: ubuntu-latest
    needs: [ setup, dry-run-release ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "liquibot"
          git config user.email "liquibot@liquibase.org"

      - name: Delete branch & tag
        if: always()
        run: |
          git push origin --delete ${{ needs.setup.outputs.dry_run_branch }}
          echo "Remote branch ${{ needs.setup.outputs.dry_run_branch }} deleted"
          git push origin --delete refs/tags/${{ env.DRY_RUN_VERSION }}
          echo "Remote tag ${{ env.DRY_RUN_VERSION }} deleted"
